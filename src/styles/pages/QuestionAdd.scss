@use "sass:map";
@import "~perfect-scrollbar";

.brn-header {
  position: unset;
}

.brn-header-container {
  margin-bottom: 4px;
  padding-top: 0;
}

div[class^="HeaderController__subnav"] {
  display: none;
}

.ps__rail-x {
  bottom: 0;
  top: auto !important;
}

.flash-messages-container {
  top: 0;
  z-index: 9999;
  // for seeing notifications after moderate panel has open
  position: fixed;
}

.ext {
  &-rc-options {
    position: absolute;

    > .options-container {
      z-index: 1;
      margin: 46px -56px 0 0;
    }

    &:not(:active):not(:focus):not(:focus-within) > .options-container {
      &:not(:hover) {
        display: none;
      }
    }
  }

  &-page-number {
    margin: 8px 4px 16px;
  }

  &-corner-button-container {
    position: absolute;
    bottom: -5px;
    left: 0;
    z-index: 1;
  }
}

html:not(.mobile) .queue:not(.buttons-visibility-always),
html.mobile .queue.buttons-visibility-on-hover {
  .ext-quick-action-buttons {
    position: absolute;
    right: 0;
    bottom: 0;
  }
}

@media (max-width: 767px) {
  .ext-density-container {
    display: none;
  }
}

.queue {
  display: grid;
  grid-auto-flow: dense;
  grid-column-start: 1;
  width: -webkit-fill-available;
  // grid-template-columns: repeat(auto-fit, minmax(384px, 1fr));
  // grid-template-columns: repeat(auto-fit, minmax(420px, 1fr));

  .latex {
    max-width: 100%;
  }
}

$densities: (
    size: 2,
    min-width: 768px,
    max-width: 1365px,
  ),
  (
    size: 3,
    min-width: 1366px,
    max-width: 1919px,
  ),
  (
    size: 4,
    min-width: 1920px,
    max-width: 2159px,
  ),
  (
    size: 5,
    min-width: 2160px,
    max-width: 2559px,
  ),
  (
    size: 6,
    min-width: 2560px,
    max-width: 3071px,
  ),
  (
    size: 7,
    min-width: 3072px,
    max-width: 3439px,
  ),
  (
    size: 8,
    min-width: 3440px,
  );

@mixin generateMediaQuery($min-width, $max-width) {
  @if $min-width and $max-width {
    @media (min-width: $min-width) and (max-width: $max-width) {
      @content;
    }
  } @else if $min-width {
    @media (min-width: $min-width) {
      @content;
    }
  } @else if $max-width {
    @media (max-width: $max-width) {
      @content;
    }
  }
}

@each $density in $densities {
  $size: map-get($density, size);
  $min-width: map-get($density, min-width);
  $max-width: map-get($density, max-width);

  .queue[data-density="#{$size}"] {
    grid-template-columns: repeat($size, 1fr);
  }

  @include generateMediaQuery($min-width, $max-width) {
    .queue {
      &:not([data-density]),
      &[data-density=""],
      &[data-density="0"] {
        grid-template-columns: repeat($size, 1fr);
      }
    }
  }
}

.report-item-wrapper {
  // border-bottom: 2px solid #ebf2f7;
  padding: 5px 1px;
  position: relative;
  border: 2px solid #ebf2f7;
  margin: -2px 0 0 -2px;
}
